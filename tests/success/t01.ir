################### global scope ###################
var global
	type: INT - size: 0 - width: 4 - offset: 0
var a
	type: INT array - size: 10 - width: 40 - offset: 4
func print
	returntype: VOID - num_params: 1
	param i
		type: INT - size: 0 - width: 4 - offset: 0
func scan
	returntype: INT - num_params: 0
func exit
	returntype: VOID - num_params: 1
	param i
		type: INT - size: 0 - width: 4 - offset: 0
func func
	returntype: INT - num_params: 3
	param arr
		type: INT array - size: 10 - width: 40 - offset: 8
	param len
		type: INT - size: 0 - width: 4 - offset: 4
	param threshold
		type: INT - size: 0 - width: 4 - offset: 0
func main
	returntype: INT - num_params: 0
################### scope for func ###################
var threshold
	type: INT - size: 0 - width: 4 - offset: 0
var len
	type: INT - size: 0 - width: 4 - offset: 4
var arr
	type: INT array - size: 10 - width: 40 - offset: 8
var i
	type: INT - size: 0 - width: 4 - offset: 48
var sum
	type: INT - size: 0 - width: 4 - offset: 52
var #V_0
	type: INT - size: 0 - width: 4 - offset: 56
var #V_1
	type: INT - size: 0 - width: 4 - offset: 60
var #V_2
	type: INT - size: 0 - width: 4 - offset: 64
################### scope for main ###################
var #V_4
	type: INT - size: 0 - width: 4 - offset: 0
var #V_5
	type: INT - size: 0 - width: 4 - offset: 4
var #V_6
	type: INT - size: 0 - width: 4 - offset: 8
<0001> i = 0
<0002> sum = 0
<0003> IF i < len GOTO 5
<0004> GOTO 14
<0005> #V_0 = arr[i]
<0006> IF #V_0 <= threshold GOTO 8
<0007> GOTO 10
<0008> #V_1 = sum + 1
<0009> sum = #V_1
<0010> #V_2 = i + 1
<0011> i = #V_2
<0012> CALL print, ()
<0013> GOTO 3
<0014> RETURN sum
<0015> global = 1
<0016> #V_4 = 5 + 5
<0017> #V_5 = CALL func, ()
<0018> RETURN #V_5
<0019> #V_6 = CALL scan, ()
<0020> CALL print, ()
<0021> CALL exit, ()
